// <auto-generated />
using System;
using Infrastructure.DbContextt;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(ProductDbContext))]
    [Migration("20250730172459_CreateProductImagesTable")]
    partial class CreateProductImagesTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111111"),
                            Name = "Clothes"
                        },
                        new
                        {
                            Id = new Guid("22222222-2222-2222-2222-222222222222"),
                            Name = "Cars"
                        },
                        new
                        {
                            Id = new Guid("33333333-3333-3333-3333-333333333333"),
                            Name = "Job"
                        },
                        new
                        {
                            Id = new Guid("44444444-4444-4444-4444-444444444444"),
                            Name = "Sport"
                        },
                        new
                        {
                            Id = new Guid("55555555-5555-5555-5555-555555555555"),
                            Name = "Pets"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductCondition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("ProductPrice")
                        .HasColumnType("float");

                    b.Property<string>("Title")
                        .HasMaxLength(35)
                        .HasColumnType("nvarchar(35)");

                    b.HasKey("Id");

                    b.ToTable("Products", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("a1b2c3d4-e5f6-4a7b-8c9d-0e1f2a3b4c5d"),
                            CreatedAt = new DateTime(2023, 11, 15, 10, 30, 0, 0, DateTimeKind.Unspecified),
                            Description = "Black T-shirt size L is suitable for men with a height of 180+ centimeters",
                            Location = "Kyiv",
                            ProductCondition = "Used",
                            ProductPrice = 123.0,
                            Title = "T-shirt"
                        },
                        new
                        {
                            Id = new Guid("b2c3d4e5-f6a7-4b8c-9d0e-1f2a3b4c5d6e"),
                            CreatedAt = new DateTime(2023, 11, 15, 10, 35, 0, 0, DateTimeKind.Unspecified),
                            Description = "Leather winter boots",
                            Location = "Lviv",
                            ProductCondition = "Open Box",
                            ProductPrice = 234.0,
                            Title = "Boots"
                        },
                        new
                        {
                            Id = new Guid("c3d4e5f6-a7b8-4c9d-0e1f-2a3b4c5d6e7f"),
                            CreatedAt = new DateTime(2023, 11, 15, 10, 40, 0, 0, DateTimeKind.Unspecified),
                            Description = "Stylish men's wristwatch",
                            Location = "Odesa",
                            ProductCondition = "New",
                            ProductPrice = 345.0,
                            Title = "Watch"
                        });
                });

            modelBuilder.Entity("Domain.Entities.ProductImage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductImages", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("a1b2c3d4-e5f6-4a7b-8c9d-111111111111"),
                            ImagePath = "uploads/product-photos/tshirt1.jpg",
                            ProductId = new Guid("a1b2c3d4-e5f6-4a7b-8c9d-0e1f2a3b4c5d")
                        },
                        new
                        {
                            Id = new Guid("a1b2c3d4-e5f6-4a7b-8c9d-222222222222"),
                            ImagePath = "uploads/product-photos/tshirt2.jpg",
                            ProductId = new Guid("a1b2c3d4-e5f6-4a7b-8c9d-0e1f2a3b4c5d")
                        },
                        new
                        {
                            Id = new Guid("b2c3d4e5-f6a7-4b8c-9d0e-333333333333"),
                            ImagePath = "uploads/product-photos/boots1.jpg",
                            ProductId = new Guid("b2c3d4e5-f6a7-4b8c-9d0e-1f2a3b4c5d6e")
                        },
                        new
                        {
                            Id = new Guid("c3d4e5f6-a7b8-4c9d-0e1f-444444444444"),
                            ImagePath = "uploads/product-photos/watch1.jpg",
                            ProductId = new Guid("c3d4e5f6-a7b8-4c9d-0e1f-2a3b4c5d6e7f")
                        });
                });

            modelBuilder.Entity("Domain.Entities.ProductImage", b =>
                {
                    b.HasOne("Domain.Entities.Product", "Product")
                        .WithMany("Images")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Domain.Entities.Product", b =>
                {
                    b.Navigation("Images");
                });
#pragma warning restore 612, 618
        }
    }
}
